{"version":3,"sources":["webpack:///./node_modules/olMap/src/mapHelper/template/identifyHtml.html","webpack:///./node_modules/olMap/src/mapHelper/control/tool_identify.js"],"names":["module","exports","Object","defineProperty","__webpack_exports__","value","$","__WEBPACK_IMPORTED_MODULE_0__common_comLib__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_1__control_baseControl__","__WEBPACK_IMPORTED_MODULE_2__enum_controlType__","__WEBPACK_IMPORTED_MODULE_4__enum_eventName__","__WEBPACK_IMPORTED_MODULE_5__enum_specialField__","__WEBPACK_IMPORTED_MODULE_6__common_styles__","__WEBPACK_IMPORTED_MODULE_7__core_common_httpRequestHelper__","__WEBPACK_IMPORTED_MODULE_7__core_common_httpRequestHelper___default","n","__WEBPACK_IMPORTED_MODULE_8__template_identifyHtml_html__","__WEBPACK_IMPORTED_MODULE_8__template_identifyHtml_html___default","tool_identify","inhertObject","refreshMapPoint","data","mapHelper","this","injects","getMapHelper","mapPoints","_data","__params","selectFeatures","removeMapPoint","call","i","length","feature","cord","getCenter","features","_proj","proj","addfeatures","addPoint","options","pointLayerID","pointStyle","getSucc","push","console","error","curFeature","getWarn","concat","apply","keepPar","clear","_activeTab","tab","callback","curActiveTab","siblings","removeClass","addClass","panelId","attr","panel","parents","find","show","hide","slider","curTabLength","innerWidth","tanslateLength","prevAll","each","x","css","_moveTabSlide","ol","undefined","mapContainer","controlBarContainer","controlBar","cursor","queryPanelSelector","layerTileField","maxFeatureCount","templates","tabSliderHtml","tabTemplate","tabPanelTemplate","valueTemplate","skip","matchWholeWord","skipFields","translate","needTranslate","translateUrl","translateFunc","events","selTabCallBack","id","selFeature","filter","tabId","curPanel","async","warn","empty","append","_opt","pro","Feature","getProperties","transRes","isFunc","isString","_pro","key","hasOwnProperty","element","findIndex","toLowerCase","layer","isTranslateFieldName","tableName","get","translateTable","jObjects","a","postRequest","___","isArray","html","_skips","format","name","exSearch","createPanelCallback","isCloseClick","identifyListener","identifyPanel","identifyPanelOverLayObj","type","tool","init","extend","active","self","container","delegate","bind","e","addListener","click","evt","_selFeatures","b","path","tagName","point","isLatLon","coordinate","toLonLat","map","forEachFeatureAtPixel","pixel","getRandom","getSource","getProjection","spatialReference","zoomToFeature","addOverlay","positioning","createPanelFunc","tabHtml","panelHtml","layerTitle","title","tmpPanelHtml","content","destroy","removeListener","removeOverlay"],"mappings":"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","file":"static/js/9.077675b8dd746dee922c.js","sourcesContent":["module.exports = \"\\r\\n<div class=\\\"identifyPanel ctlPanel\\\" panelID=\\\"{panelID}\\\" style=\\\"display:none\\\">\\r\\n    <div class=\\\"widget\\\" style=\\\"min-width: 300px; border: 1px solid #646c75; border-radius: 2px;\\\">\\r\\n        <div class=\\\"widget-header\\\">\\r\\n            <!-- <span class=\\\"widget-caption\\\">功能面板</span> -->\\r\\n            <div class=\\\"widget-buttons\\\" style=\\\"padding:0 13px; z-index: 999999;\\\">\\r\\n                <span class=\\\"widget_back btn\\\" style=\\\"z-index:9999999999\\\">\\r\\n                    <i class=\\\"fa fa-times\\\"></i>\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--Widget Header-->\\r\\n        <div class=\\\"widget-body form-horizontal\\\" style=\\\"max-height:500px;overflow-y:auto;padding:10px 15px;\\\">\\r\\n            <div class=\\\"ol-tabs ol-tabs--top\\\">\\r\\n                <div class=\\\"ol-tabs__header is-top\\\">\\r\\n                    <div class=\\\"ol-tabs__nav-wrap is-top\\\">\\r\\n                        <div class=\\\"ol-tabs__nav-scroll\\\">\\r\\n                            <div class=\\\"tab-list ol-tabs__nav is-top\\\" style=\\\"transform: translateX(0px);\\\">\\r\\n                                <div class=\\\"tab-slider ol-tabs__active-bar is-top\\\" style=\\\"width: 56px; transform: translateX(0px);\\\"></div>\\r\\n                                <div data-panel='111' class=\\\"tab ol-tabs__item is-top\\\">用户管理</div>\\r\\n                                <div data-panel='112' class=\\\"tab ol-tabs__item is-top\\\">配置管理</div>\\r\\n                                <div data-panel='113' class=\\\"tab ol-tabs__item is-top\\\" selected=\\\"true\\\">角色管理</div>\\r\\n                                <div data-panel='114' class=\\\"tab ol-tabs__item is-top\\\" >定时任务补偿</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"ol-tabs__content\\\">\\r\\n                    <div panel-id=\\\"111\\\" class=\\\"tab-panel ol-tab-pane\\\" >用户管理</div>\\r\\n                    <div panel-id=\\\"112\\\" class=\\\"tab-panel ol-tab-pane\\\"  >配置管理</div>\\r\\n                    <div panel-id=\\\"113\\\" class=\\\"tab-panel ol-tab-pane\\\"  >角色管理</div>\\r\\n                    <div panel-id=\\\"114\\\" class=\\\"tab-panel ol-tab-pane\\\"  >定时任务补偿</div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--Widget Body-->\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/olMap/src/mapHelper/template/identifyHtml.html\n// module id = bVOR\n// module chunks = 5 9","import comLib from '../common/comLib'\r\nimport baseControl from '../control/baseControl'\r\nimport controlType from '../enum/controlType'\r\nimport mapId from '../enum/mapId';\r\nimport eventName from '../enum/eventName'\r\nimport specialField from '../enum/specialField'\r\nimport style from '../common/styles'\r\n\r\nimport httpRequest from '../../__core/common/httpRequestHelper'\r\n\r\n//html\r\nimport identifyHtml from '../template/identifyHtml.html'\r\n\r\nvar tool_identify = comLib.inhertObject(baseControl);\r\n\r\ntool_identify.injects = {\r\n    ol: undefined,\r\n    mapContainer: undefined,  // 地图所在div\r\n    controlBarContainer: undefined, //bar 所在的div\r\n    controlBar: undefined, // bar\r\n    getMapHelper: undefined\r\n}\r\n\r\ntool_identify.options = {\r\n    cursor:\"help\",\r\n    queryPanelSelector: '.identifyPanel',\r\n    layerTileField: 'title',\r\n    maxFeatureCount: 3,\r\n    templates: {\r\n        tabSliderHtml: '<div class=\"tab-slider ol-tabs__active-bar is-top\" style=\"width: 56px; transform: translateX(0px);\"></div>',\r\n        tabTemplate: `<div data-panel='{id}' class=\"tab ol-tabs__item is-top\" >{title}</div>`,\r\n        tabPanelTemplate: `<div panel-id=\"{id}\" class=\"tab-panel ol-tab-pane\" >{content}</div>`,\r\n        valueTemplate: `<div class=\"row\"><label class=\"ol-form-item__label title\" title=\"{name}\">{name}:</label>\r\n                        <label class=\"ol-form-item__label content\" title=\"{value}\">{value}</label></div>`\r\n    },\r\n    skip: {\r\n        matchWholeWord: false,\r\n        skipFields: [\r\n            \"guid\", \"shape\", \"geom\", \"geometry\", \"polygon\", \"id\", \"objectid\", 'geojson', 'wkt', \"gid\"\r\n        ],\r\n    },\r\n    translate: {\r\n        needTranslate: true,\r\n        translateUrl: null,\r\n        translateFunc: undefined,\r\n    },\r\n    pointLayerID: \"identify\",\r\n    events: {\r\n        selTabCallBack: _selTabCallBack,\r\n        exSearch: undefined,\r\n        createPanelCallback: undefined,\r\n    }\r\n    // helpTipSelector: '#toolTipBtn', //TODO: NOT USING    \r\n    // drawType: 'Polygon'\r\n}\r\n\r\ntool_identify.__params = {\r\n    isCloseClick: false,\r\n    curFeature: undefined,\r\n    selectFeatures: undefined,//选中的要素组\r\n    mapPoints: [],//在地图上画的点,\r\n    identifyListener: undefined,// click事件\r\n    identifyPanel: null, //那个面板\r\n    identifyPanelOverLayObj: null, //面板的overlay\r\n\r\n}\r\n\r\ntool_identify.type = controlType.tool;\r\n\r\n\r\n//初始化, 只调用一次\r\ntool_identify.init = function (injects, options) {\r\n\r\n    var self = this;\r\n\r\n    // self.__params.identifyListener = null;// click事件\r\n    // self.__params.selectFeatures = null //选中的要素组\r\n    // self.__params.curFeature = null //当前选中的要素\r\n    // self.__params.identifyPanel = null //那个面板\r\n    // self.__params.identifyPanelOverLayObj = null //面板的overlay\r\n    // self.__params.mapPoints = [] //在地图上画的点\r\n\r\n    this.injects = $.extend(true, {}, this.injects, injects)\r\n    this.options = $.extend(true, {}, this.options, options)\r\n}\r\n\r\n//激活,每次点击就调用\r\ntool_identify.active = function () {\r\n    var self = this;\r\n    var mapHelper = self.injects.getMapHelper();\r\n    var ol = self.injects.ol;\r\n\r\n    createQueryPanel.call(self);\r\n    bindEvents.call(self);\r\n    // mapHelper.addListener(eventName.mouseOver, function (evt) {\r\n    //     var map = mapHelper.map;\r\n    //     var pixel = map.getEventPixel(evt.originalEvent);\r\n\r\n    //     var obj = map.forEachFeatureAtPixel(pixel, function (feature, layer) {            \r\n    //         return { feature, layer };\r\n    //     });\r\n\r\n    //     var features = mapHelper.map.getFeaturesAtPixel(evt.pixel);\r\n\r\n    // })\r\n\r\n\r\n\r\n}\r\n\r\ntool_identify.destroy = function () {\r\n    var self = this;\r\n    var mapHelper = self.injects.getMapHelper();\r\n    //移除事件监听      \r\n    mapHelper.removeListener(self.__params.identifyListener)\r\n    //self.__params.identifyListener = null;\r\n    mapHelper.removeOverlay(true);\r\n    removeMapPoint.call(self);\r\n}\r\n\r\n\r\n//选中tab之后, 地图画点, panel刷新\r\nfunction _selTabCallBack(id, tab, panel) {\r\n    var self = this;\r\n    //其他的一些处理事件    \r\n    var selFeature = self.__params.selectFeatures.filter(x => x.tabId == id)[0]\r\n    if (!selFeature) {\r\n        return;\r\n    }\r\n    self.__params.curFeature = selFeature;\r\n    self.curPanel = panel\r\n    refreshMapPoint.call(self)\r\n    refreshPanel.call(self);\r\n\r\n}\r\n\r\nfunction bindEvents() {\r\n    var self = this;\r\n    var container = self.injects.mapContainer;\r\n    var mapHelper = self.injects.getMapHelper();\r\n    //self.mapClickListener = mapHelper.addListener(eventName.click, onMapClickCallback.bind(self));\r\n    //tab点击\r\n    container.delegate(`${self.options.queryPanelSelector} .tab`, 'click', function () {\r\n\r\n        var $this = $(this)\r\n        _activeTab($this, self.options.events.selTabCallBack.bind(self));\r\n        // //tab设置\r\n        // var curActiveTab = $(`${self.options.queryPanelSelector} .tab.is-active`);\r\n        // if (curActiveTab == $this) {\r\n        //     return\r\n        // }\r\n        // curActiveTab.removeClass('is-active');\r\n        // $this.addClass('is-active');\r\n        // //panel显示\r\n        // var panelId = $this.attr('data-panel')\r\n        // var panel = container.find(`${self.options.queryPanelSelector} .tab-panel[panel-id=${panelId}]`)\r\n        // panel.show();\r\n        // panel.siblings('.tab-panel').hide();\r\n        // //条子移动\r\n        // _moveTabSlide($this);\r\n\r\n\r\n    })\r\n\r\n    //panel close event\r\n    //.widget_back\r\n    container.delegate(`${self.options.queryPanelSelector} .widget_back`, 'click', function (e) {\r\n\r\n        self.__params.isCloseClick = true;\r\n        self.__params.identifyPanel.hide();\r\n        removeMapPoint.call(self)\r\n    })\r\n    container.delegate(`${self.options.queryPanelSelector}`, 'click', function (e) {\r\n        self.__params.isCloseClick = true;\r\n    })\r\n    \r\n    //地图事件\r\n    if (!self.__params.identifyListener) {\r\n        self.__params.identifyListener = mapHelper.addListener(eventName.click, mapClickCallBack.bind(self))\r\n    }\r\n\r\n\r\n\r\n    // container.delegate(`${self.options.toolTipSelector} .ol-popup-closer`, 'click', function () {\r\n\r\n\r\n    //     var tipDom = $(this).parent('.tooltip-measure:first');\r\n    //     var lineId = tipDom.attr('data-line');\r\n    //     var markers = self.pinToolTips.filter(x => x.lineId == lineId).map(x => x.marker);\r\n    //     //TODO: only remove my draws\r\n    //     mapHelper.clear(mapId.tmpDrawLayer);\r\n    //     mapHelper.removeOverlay(true);\r\n\r\n    // })\r\n}\r\n\r\n//刷新panel\r\nasync function refreshPanel() {\r\n    var self = this;\r\n    // var mapHelper = self.injects.getMapHelper();\r\n\r\n\r\n\r\n    //没有选中的就清空吧\r\n    if (!self.__params.curFeature) {\r\n        console.warn('no curFeature')\r\n        self.curPanel.empty().append('未查到有用的数据。')\r\n        return\r\n    }\r\n    var _opt = self.options;\r\n\r\n    //组织数据\r\n    var pro = self.__params.curFeature.features instanceof ol.Feature ? self.__params.curFeature.features.getProperties() : self.__params.curFeature.features;\r\n    //如果需要翻译    \r\n    if (_opt.translate.needTranslate && _opt.translate.translateUrl) {\r\n        var transRes;\r\n\r\n        if (comLib.isFunc(_opt.translate.translateFunc)) {\r\n            transRes = _opt.translate.translateFunc(pro);\r\n        } else if (comLib.isString(_opt.translate.translateUrl)) {\r\n            var _pro = {}\r\n            //干掉一些shp字段\r\n            var skip = self.options.skip.skipFields;\r\n            for (const key in pro) {\r\n                if (pro.hasOwnProperty(key)) {\r\n                    const element = pro[key];\r\n                    //不是需要跳过的就存起来\r\n                    if (skip.findIndex(x => x.toLowerCase() == key.toLowerCase()) < 0) {\r\n                        _pro[key] = element\r\n                    }\r\n                }\r\n            }\r\n            // \r\n            var layer = self.__params.curFeature.layer\r\n            if(layer){\r\n                var _data = {\r\n                    isTranslateFieldName: true,\r\n                    tableName: layer.get(specialField.translateTable) || layer.get('id'), //FIXME: self.__params.curFeature.layer.get(\"id\") ???\r\n                    jObjects: [_pro]\r\n                }        \r\n                transRes = await httpRequest.postRequest(_opt.translate.translateUrl, _data);\r\n            }\r\n        }\r\n        // pro = transRes ? transRes.value.select(x => { }) : pro;\r\n        //if you see thie line \r\n        //   please calm down  \r\n        var ___ = comLib.isArray(transRes) ? transRes[0] : transRes;\r\n        pro = ___ ? ___ : pro\r\n    }\r\n\r\n    //拼html\r\n    var html = \"\"\r\n    var _skips = _opt.skip.skipFields;\r\n    for (const key in pro) {\r\n        //如果不是我的属性, 或者 属性是显式需要跳过的属性 then continue\r\n        if (!pro.hasOwnProperty(key) || _skips.filter(x => {\r\n            if (_opt.skip.matchWholeWord) {\r\n                return x == key\r\n            } else {\r\n                return x.toLowerCase() == key.toLowerCase()\r\n            }\r\n        }).length > 0) {\r\n            continue\r\n        }\r\n\r\n        const value = pro[key];\r\n\r\n        html += _opt.templates.valueTemplate.format({\r\n            name: key || \"未命名字段\",\r\n            value: (value == undefined||value==\"\") ? \"(空)\" : value\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n    self.curPanel.empty().append(html)\r\n\r\n}\r\n\r\n//在地图上画一些点\r\nfunction refreshMapPoint(data) {\r\n    var self = this;\r\n    var mapHelper = self.injects.getMapHelper();\r\n    var mapPoints = [];\r\n\r\n\r\n\r\n    var _data = data || self.__params.selectFeatures\r\n\r\n\r\n    removeMapPoint.call(self, true);\r\n\r\n    // mapPoints = self.__params.mapPoints;\r\n    //画选中的要素组\r\n\r\n\r\n\r\n\r\n    for (let i = 0; i < _data.length; i++) {\r\n        const feature = _data[i];\r\n\r\n\r\n        var cord = mapHelper.getCenter(feature.features)\r\n        var _proj = feature.proj;\r\n        if (!cord) {\r\n            console.error(`no center point ${i}`);\r\n            continue\r\n        }\r\n\r\n\r\n        var addfeatures = mapHelper.addPoint(self.options.pointLayerID, cord, style.pointStyle.getSucc(), _proj);//为了预备返回是数组\r\n        mapPoints.push(addfeatures);\r\n    }\r\n\r\n    //画选中的要素\r\n    if (self.__params.curFeature) {\r\n        var cord = mapHelper.getCenter(self.__params.curFeature.features)\r\n        var _proj = self.__params.curFeature.features.proj;\r\n        if (cord) {\r\n            var addfeatures = mapHelper.addPoint(self.options.pointLayerID, cord, style.pointStyle.getWarn(), _proj);//为了预备返回是数组\r\n            mapPoints.push(addfeatures);\r\n        }\r\n    }\r\n\r\n    self.__params.mapPoints = [].concat.apply([], mapPoints);\r\n\r\n}\r\n\r\n//清除地图上画的点\r\nfunction removeMapPoint(keepPar) {\r\n    var self = this;\r\n    var mapHelper = self.injects.getMapHelper();\r\n    mapHelper.clear(self.options.pointLayerID);\r\n    if (!keepPar) {\r\n        self.__params.mapPoints = [];\r\n        self.__params.curFeature = null\r\n    }\r\n}\r\n\r\n//地图选中的时候的事件回调\r\nasync function mapClickCallBack(evt) {\r\n\r\n    var self = this;\r\n    var mapHelper = self.injects.getMapHelper();\r\n    //选中的要素\r\n    var _selFeatures = []\r\n\r\n    // if (self.__params.isCloseClick &&self.__params.identifyPanel&& window.getComputedStyle(self.__params.identifyPanel[0]).display != \"none\") {\r\n    // if (self.__params.isCloseClick) {\r\n    //     //说明点中了panel\r\n    //     self.__params.isCloseClick = false;\r\n    //     return\r\n    // }\r\n    if (evt.b.b.path[0].tagName == \"DIV\"||self.__params.isCloseClick) {\r\n        //说明点中了panel\r\n        self.__params.isCloseClick = false;\r\n        return\r\n    }\r\n\r\n    if (comLib.isFunc(self.options.events.exSearch)) {\r\n        //TODO: conact\r\n        var point = mapHelper.isLatLon(evt.coordinate) ? evt.coordinate : mapHelper.toLonLat(evt.coordinate)\r\n        _selFeatures = await self.options.events.exSearch(point);\r\n    }\r\n\r\n    var i = 1\r\n    mapHelper.map.forEachFeatureAtPixel(evt.pixel, function (feature, layer) {\r\n        //跳过临时图层\r\n        if (layer.get('id') == self.options.pointLayerID) {\r\n            return\r\n        }\r\n        if (i++ > self.options.maxFeatureCount) {\r\n            return\r\n        }\r\n\r\n        _selFeatures.push({\r\n            tabId: comLib.getRandom(),\r\n            features: feature,\r\n            layer: layer,\r\n            proj: layer.getSource().getProjection() || layer.get('proj') || mapHelper.spatialReference\r\n        })\r\n    })\r\n\r\n    // mapHelper.zoomToFeature(mapHelper.toProj(_selFeatures[0].features))\r\n\r\n    //缩放到选中的要素\r\n    if (comLib.isArray(_selFeatures, true)) {\r\n\r\n        var feature = _selFeatures[0].features;\r\n        var proj = _selFeatures[0].proj;\r\n        mapHelper.zoomToFeature(feature, undefined, undefined, proj)\r\n    }\r\n\r\n\r\n    // var features = mapHelper.map.getFeaturesAtPixel(evt.pixel);\r\n    // self.__params.selectFeatures = features;\r\n    if (_selFeatures && _selFeatures.length == 0) {\r\n        return\r\n    }\r\n    self.__params.selectFeatures = _selFeatures\r\n    self.__params.identifyPanelOverLayObj = mapHelper.addOverlay(evt.coordinate, self.__params.identifyPanelOverLayObj || self.__params.identifyPanel, {\r\n        positioning: \"bottom-center\"\r\n        //  offset: [0, -164] \r\n    });\r\n    self.__params.identifyPanel.show();\r\n    _createTab.call(self, self.__params.identifyPanel, self.__params.selectFeatures, self.options.events.createPanelCallback);\r\n    // mapHelper.zoomToCenter(evt.coordinate)\r\n    refreshMapPoint.call(self)\r\n\r\n}\r\n\r\n//创建panel\r\nfunction createQueryPanel() {\r\n    var self = this;\r\n    var mapContainer = self.injects.mapContainer;\r\n\r\n    //如果不存在就创建\r\n    if (mapContainer.find(self.options.queryPanelSelector).length == 0) {\r\n        mapContainer.append(identifyHtml)\r\n        self.__params.identifyPanel = mapContainer.find(self.options.queryPanelSelector)\r\n    }\r\n}\r\n\r\n//重新创建面板的内容\r\n//TODO: 需要标注化data输入\r\nfunction _createTab(panel, data, createPanelFunc) {\r\n    var self = this\r\n    var tabHtml = \"\";\r\n    var panelHtml = \"\"\r\n    for (let i = 0; i < data.length; i++) {\r\n        const element = data[i];\r\n        var layerTitle = element.title ? element.title : element.layer.get(self.options.layerTileField) || `未命名图层${i}`;\r\n        tabHtml += self.options.templates.tabTemplate.format({\r\n            id: element.tabId,\r\n            title: layerTitle\r\n        })\r\n        var tmpPanelHtml = `<div panel-id=\"${element.tabId}\" class=\"tab-panel ol-tab-pane\" >{content}</div>`;\r\n        var content = comLib.isFunc(createPanelFunc) ? createPanelFunc(element) : `${element.tabId}`;\r\n        panelHtml += tmpPanelHtml.format({ content: content })\r\n    }\r\n    panel.find('.tab-list').empty().append(self.options.templates.tabSliderHtml).append(tabHtml);\r\n    panel.find('.ol-tabs__content').empty().append(panelHtml);\r\n    _activeTab(panel.find('.tab:first'), self.options.events.selTabCallBack.bind(self))\r\n}\r\n\r\n//激活tab\r\nfunction _activeTab(tab, callback) {\r\n    //tab设置\r\n\r\n    var curActiveTab = tab.siblings('.tab.is-active');\r\n    if (curActiveTab == tab) {\r\n        return\r\n    }\r\n    curActiveTab.removeClass('is-active');\r\n    tab.addClass('is-active');\r\n    //panel显示\r\n    var panelId = tab.attr('data-panel')\r\n    // var panel = container.find(`${self.options.queryPanelSelector} .tab-panel[panel-id=${panelId}]`)\r\n    var panel = tab.parents('.ol-tabs:first').find(`.tab-panel[panel-id=${panelId}]:first`)\r\n    panel.show();\r\n    panel.siblings('.tab-panel').hide();\r\n    //条子移动\r\n    _moveTabSlide(tab);\r\n\r\n    if (callback) {\r\n        callback(panelId, tab, panel)\r\n    }\r\n}\r\n//tab条子移动\r\nfunction _moveTabSlide(tab) {\r\n    var par = tab.parents('.tab-list:first')\r\n    var slider = par.find('.tab-slider');\r\n    var space = 6; //i have no idea why tab has a space\r\n    var curTabLength = tab.innerWidth() + space;\r\n    var tanslateLength = 0;\r\n    tab.prevAll('.tab').each((i, x) => {\r\n        tanslateLength += i * (space / 2) + $(x).innerWidth();\r\n    })\r\n    slider.css('width', `${curTabLength}px`)\r\n    slider.css('transform', `translateX(${tanslateLength}px`)\r\n\r\n\r\n}\r\n\r\nexport default tool_identify;\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/olMap/src/mapHelper/control/tool_identify.js\n// module id = pIGh\n// module chunks = 9"],"sourceRoot":""}