{"version":3,"sources":["webpack:///./node_modules/olMap/src/mapHelper/template/mesureTooltip.html","webpack:///./node_modules/olMap/src/mapHelper/control/tool_measureArea.js","webpack:///./node_modules/olMap/src/mapHelper/template/helpTooltip.html"],"names":["module","exports","Object","defineProperty","__webpack_exports__","value","$","__WEBPACK_IMPORTED_MODULE_0__common_comLib__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_1__control_baseControl__","__WEBPACK_IMPORTED_MODULE_2__enum_controlType__","__WEBPACK_IMPORTED_MODULE_3__enum_mapId__","__WEBPACK_IMPORTED_MODULE_4__common_caculator__","__WEBPACK_IMPORTED_MODULE_5__template_mesureTooltip_html__","__WEBPACK_IMPORTED_MODULE_5__template_mesureTooltip_html___default","n","__WEBPACK_IMPORTED_MODULE_6__template_helpTooltip_html__","tool_measureArea","inhertObject","createMeasureTooltip","x","y","container","this","injects","mapContainer","mapHelper","getMapHelper","_id","getRandom","append","a","format","count","id","lineId","curLineId","measureTooltipElement","find","options","toolTipSelector","curTooltip","addOverlay","offset","positioning","canMutity","ol","undefined","controlBarContainer","controlBar","helpTipSelector","drawType","type","tool","init","extend","lines","pinToolTips","sketch","source","call","self","delegate","tipDom","parent","attr","filter","map","marker","clear","tmpDrawLayer","removeOverlay","active","drawObj","draw","startDraw","devt","push","feature","tooltipCoord","coordinate","listener","getGeometry","on","evt","console","log","output","geom","target","Polygon","_geom84","transForm","spatialReference","formatArea","getArea","getInteriorPoint","getCoordinates","LineString","formatLength","getLength","getLastCoordinate","empty","setPosition","bind","endDraw","Observable","unByKey","getPosition","className","point","Point","addFeature","Feature","removeClass","setCurTool","click","onceCall","destroy"],"mappings":"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","file":"static/js/7.f96866b5eb93ddefc1c7.js","sourcesContent":["module.exports = \"<div id='lengthLabel' class=\\\"tooltip tooltip-measure\\\" data-line=\\\"{lineId}\\\" data-id=\\\"{id}\\\"  data-count=\\\"{count}\\\" >\\r\\n    <a class=\\\"ol-popup-closer hidden\\\" href=\\\"javascript:void(0);\\\"></a>\\r\\n    <div class=\\\"content\\\"></div>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/olMap/src/mapHelper/template/mesureTooltip.html\n// module id = QWp6\n// module chunks = 5 6 7","import comLib from '../common/comLib'\r\nimport baseControl from '../control/baseControl'\r\nimport controlType from '../enum/controlType'\r\nimport mapId from '../enum/mapId';\r\nimport caculator from '../common/caculator'\r\n\r\n//html\r\nimport measureTooltipHtml from '../template/mesureTooltip.html'\r\nimport helpTooltipHtml from '../template/helpTooltip.html'\r\n\r\nvar tool_measureArea = comLib.inhertObject(baseControl);\r\n\r\ntool_measureArea.injects = {\r\n    ol: undefined,\r\n    mapContainer: undefined,  // 地图所在div\r\n    controlBarContainer: undefined, //bar 所在的div\r\n    controlBar: undefined, // bar\r\n    getMapHelper: undefined\r\n}\r\n\r\ntool_measureArea.options = {\r\n    toolTipSelector: '#lengthLabel',\r\n    helpTipSelector: '#toolTipBtn', //TODO: NOT USING\r\n    drawType: 'Polygon'\r\n}\r\n\r\ntool_measureArea.type = controlType.tool;\r\n\r\n\r\n//初始化, 只调用一次\r\ntool_measureArea.init = function (injects, options) {\r\n\r\n    var self = this;\r\n\r\n    this.injects = $.extend(true, {}, this.injects, injects)\r\n    this.options = $.extend(true, {}, this.options, options)\r\n\r\n    self.lines = [];\r\n    self.curLineId = \"\";\r\n    self.pinToolTips = []; //已经定了的tip\r\n    self.curTooltip = undefined; //当前活动浮动的tip\r\n    self.sketch = undefined; //图形feature\r\n    self.count = 0; //第几个点了\r\n    self.source = undefined;\r\n\r\n    createMeasureTooltip.call(this);\r\n    bindEvents.call(self);\r\n    //createHelpTooltip.call(this);\r\n}\r\n\r\n//激活,每次点击就调用\r\ntool_measureArea.active = function () {\r\n    var self = this;\r\n    var mapHelper = self.injects.getMapHelper();\r\n    var ol = self.injects.ol;\r\n\r\n\r\n    if (!self.curTooltip) {\r\n        createMeasureTooltip.call(self)\r\n    }\r\n\r\n    self.drawObj = mapHelper.draw(\r\n        {\r\n            startDraw: startDrawCallback.bind(self),\r\n            endDraw: endDrawCallback.bind(self),\r\n            click: onMapClickCallback.bind(self),\r\n            // doubleClick: onMapDoubleClickCallback.bind(self)\r\n        },\r\n        self.options.drawType,\r\n        undefined,\r\n        {\r\n            onceCall: true\r\n        }\r\n    )\r\n\r\n\r\n}\r\n\r\ntool_measureArea.destroy = function () {\r\n    var self = this;\r\n    // endDrawCallback.call(this)\r\n    debugger\r\n    //移除事件监听\r\n    ol.Observable.unByKey(self.listener);\r\n    self.sketch = null;\r\n}\r\n\r\nfunction bindEvents() {\r\n    var self = this;\r\n    var container = self.injects.mapContainer;\r\n    var mapHelper = self.injects.getMapHelper();\r\n\r\n    container.delegate(`${self.options.toolTipSelector} .ol-popup-closer`, 'click', function () {\r\n\r\n\r\n        var tipDom = $(this).parent('.tooltip-measure:first');\r\n        var lineId = tipDom.attr('data-line');\r\n        var markers = self.pinToolTips.filter(x => x.lineId == lineId).map(x => x.marker);\r\n        //TODO: only remove my draws\r\n        mapHelper.clear(mapId.tmpDrawLayer);\r\n        mapHelper.removeOverlay(true);\r\n\r\n    })\r\n}\r\n\r\n//开始启动画线工具时, 做一些事件绑定初始化之类的\r\nfunction startDrawCallback(devt, source) {\r\n    var self = this;\r\n    var ol = self.injects.ol;\r\n    var mapHelper = self.injects.getMapHelper();\r\n\r\n    //开始一条新的线\r\n    self.curLineId = comLib.getRandom();\r\n    self.lines.push(self.curLineId);\r\n\r\n    self.source = source;\r\n    self.sketch = devt.feature;\r\n    self.count = 0;\r\n    //提示框的坐标\r\n    var tooltipCoord = devt.coordinate;\r\n    self.listener = self.sketch.getGeometry().on('change', function (evt) {\r\n        console.log(\"change\")\r\n        //The event target.\r\n        //获取绘制的几何对象        \r\n        var geom = evt.target\r\n        //定义一个输出对象，用于记录面积和长度\r\n        var output;\r\n        if (geom instanceof ol.geom.Polygon) {\r\n            //输出多边形的面积\r\n\r\n\r\n            var _geom84 = mapHelper.transForm(geom, mapHelper.spatialReference, \"EPSG:4326\");\r\n            output = comLib.formatArea(caculator.getArea(_geom84));\r\n            // output = comLib.formatArea(geom.getArea());\r\n            //Return an interior point of the polygon.\r\n            //获取多变形内部点的坐标\r\n            tooltipCoord = geom.getInteriorPoint().getCoordinates();\r\n        } else if (geom instanceof ol.geom.LineString) {//TODO: 不管            \r\n            //输出多线段的长度\r\n            output = comLib.formatLength(geom.getLength());\r\n            //Return the last coordinate of the geometry.\r\n            //获取多线段的最后一个点的坐标\r\n            tooltipCoord = geom.getLastCoordinate();\r\n        }\r\n\r\n        //设置测量提示框的内标签为最终输出结果\r\n        $(self.curTooltip.target).find('.content').empty().append(`<span>${output}</span>`);\r\n        //设置测量提示信息的位置坐标\r\n        // self.measureTooltip.setPosition(tooltipCoord);\r\n        self.curTooltip.marker.setPosition(tooltipCoord);\r\n        // mapHelper.addOverlay(self.measureTooltip)\r\n    });\r\n}\r\n\r\n//结束了一次编辑, 一次绘制结束, 把当前的定位\r\nfunction endDrawCallback() {\r\n\r\n    var self = this;\r\n    var ol = self.injects.ol;\r\n    var mapHelper = self.injects.getMapHelper();\r\n\r\n\r\n    // createMeasureTooltip.call(self);\r\n    //Removes an event listener using the key returned by on() or once().\r\n    //移除事件监听\r\n    ol.Observable.unByKey(self.listener);\r\n    self.sketch = null;\r\n    //移除地图单击事件\r\n    // map.removeEventListener('singleclick');\r\n    // map.removeInteraction(draw);\r\n\r\n    //TODO:提示框\r\n    //绘制最后一个点\r\n\r\n    var coordinate = self.curTooltip.marker.getPosition()\r\n    pinTip.call(self, coordinate);\r\n    var point = new ol.geom.Point(coordinate);\r\n    self.source.addFeature(new ol.Feature(point));\r\n    //出现close    \r\n    $(self.curTooltip.target).find('.ol-popup-closer').removeClass('hidden')\r\n    self.curTooltip = null;\r\n    self.count = 0;\r\n\r\n    //因为是onceCall 所以end之后要取消工具    \r\n    mapHelper.setCurTool(undefined)\r\n\r\n\r\n}\r\n\r\nfunction onMapClickCallback(evt) {\r\n    var self = this;\r\n    var ol = self.injects.ol;\r\n\r\n    //设置测量提示信息的位置坐标，用来确定鼠标点击后测量提示框的位置\r\n\r\n    // pinTip.call(self, evt.coordinate);\r\n\r\n    // self.measureTooltip.marker.setPosition(evt.coordinate);\r\n    //如果是第一次点击，则设置测量提示框的文本内容为起点\r\n    // if (self.count == 0) {\r\n    //     $(self.measureTooltipElement).attr('data-count', self.count).find('.content').empty().append('<span>起点</span>');\r\n    //     // self.measureTooltipElement.innerHTML = \"起点\";\r\n    // }\r\n    //根据鼠标点击位置生成一个点\r\n    var point = new ol.geom.Point(evt.coordinate);\r\n    //将该点要素添加到矢量数据源中\r\n    self.source.addFeature(new ol.Feature(point));\r\n    // //更改测量提示框的样式，使测量提示框可见\r\n    // self.measureTooltipElement.className = 'tooltip tooltip-static';\r\n    //创建新的浮动测量提示框\r\n    //createMeasureTooltip.call(self, evt.coordinate);\r\n    //点击次数增加\r\n    self.count++;\r\n}\r\n\r\n//双击结束绘制\r\n// function onMapDoubleClickCallback(evt) {\r\n//     var self = this;\r\n//     var ol = self.injects.ol;\r\n//     //TODO:提示框\r\n//     //绘制最后一个点\r\n//     pinTip.call(self, evt.coordinate);\r\n//     var point = new ol.geom.Point(evt.coordinate);\r\n//     self.source.addFeature(new ol.Feature(point));\r\n//     //出现close\r\n//     debugger\r\n//     $(self.curTooltip.target).find('.ol-popup-closer').removeClass('hidden')\r\n//     self.curTooltip = null;\r\n//     self.count = 0;\r\n// }\r\n\r\nfunction pinTip(coordinate) {\r\n\r\n    var self = this;\r\n    if (self.count == 0) {\r\n        $(self.curTooltip.target).attr('data-count', self.count).find('.content').empty().append('<span>起点</span>');\r\n    }\r\n    if (!self.curTooltip.lineId) {\r\n        self.curTooltip.lineId = self.curLineId;\r\n    }\r\n    //更改测量提示框的样式，使测量提示框可见\r\n    self.curTooltip.className = 'tooltip tooltip-static';\r\n    self.curTooltip.marker.setPosition(coordinate)\r\n    self.pinToolTips.push(self.curTooltip);\r\n\r\n}\r\n\r\n// //创建提示框 xxxkm 跟着鼠标走的那个 \r\n// function createHelpTooltip() {\r\n\r\n//     var self = this;\r\n//     var container = self.injects.mapContainer;\r\n//     var mapHelper = self.injects.getMapHelper();\r\n\r\n\r\n//     self.helpTooltipElement = container.find(self.options.helpTipSelector)[0]\r\n//     if (!self.helpTooltipElement) {\r\n//         container.append(helpTooltipHtml);//创建帮助提示要素的div\r\n//         self.helpTooltipElement = container.find(self.options.helpTipSelector)[0]\r\n//     }\r\n\r\n//     // //创建一个帮助提示的覆盖标注\r\n//     // var helpTooltip = new ol.Overlay({\r\n//     //     element: self.helpTooltipElement,\r\n//     //     offset: [15, 0],\r\n//     //     positioning: 'center-left'\r\n//     // });\r\n\r\n//     //将测量提示的覆盖标注添加到地图中    \r\n//     self.helpTooltip = mapHelper.addOverlay(0, 0, self.helpTooltipElement, { offset: [0, -15], positioning: 'bottom-center' });\r\n\r\n// }\r\n//创建测量提示框 XXXKM  跟着鼠标走的那个 点击会定下有多个\r\nfunction createMeasureTooltip(x = 0, y = 0) {\r\n    //创建测量提示框的div\r\n    var self = this;\r\n    var container = self.injects.mapContainer;\r\n    var mapHelper = self.injects.getMapHelper();\r\n\r\n\r\n    var _id = comLib.getRandom();\r\n    container.append(measureTooltipHtml.format({ count: self.count, id: _id, lineId: self.curLineId }));\r\n    var measureTooltipElement = container.find(`${self.options.toolTipSelector}[data-id=${_id}]`)[0];\r\n\r\n    // var measureTooltipElement = container.find(self.options.toolTipSelector)[0]\r\n    // if (!measureTooltipElement) {\r\n    //     container.append(measureTooltipHtml.format({ count: self.count, id: comLib.getRandom(), lineId: self.curLineId }));\r\n    //     self.measureTooltipElement = container.find(self.options.toolTipSelector)[0]\r\n    // }\r\n\r\n    // //创建一个测量提示的覆盖标注\r\n    // var measureTooltip = new ol.Overlay({\r\n    //     element: self.measureTooltipElement,\r\n    //     offset: [0, -15],\r\n    //     positioning: 'bottom-center'\r\n    // });\r\n    //将测量提示的覆盖标注添加到地图中        \r\n\r\n    self.curTooltip = mapHelper.addOverlay([x, y], measureTooltipElement, { offset: [0, -15], positioning: 'bottom-center' }, { canMutity: true });\r\n    self.curTooltip.lineId = self.curLineId;\r\n}\r\n\r\nexport default tool_measureArea;\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/olMap/src/mapHelper/control/tool_measureArea.js\n// module id = TWOD\n// module chunks = 7","module.exports = \"<div id='toolTipBtn' class=\\\"tooltip tooltip-help hidden\\\">\\r\\n\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/olMap/src/mapHelper/template/helpTooltip.html\n// module id = zkbY\n// module chunks = 5 6 7"],"sourceRoot":""}