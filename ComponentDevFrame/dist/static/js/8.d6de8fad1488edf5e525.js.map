{"version":3,"sources":["webpack:///./node_modules/olMap/src/mapHelper/template/tocPanelItemTemplate.html","webpack:///./node_modules/olMap/src/mapHelper/control/command_toc.js"],"names":["module","exports","Object","defineProperty","__webpack_exports__","value","$","__WEBPACK_IMPORTED_MODULE_0__common_comLib__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_1__common_layers__","__WEBPACK_IMPORTED_MODULE_2__control_baseControl__","__WEBPACK_IMPORTED_MODULE_3__enum_controlType__","__WEBPACK_IMPORTED_MODULE_4__enum_mapId__","__WEBPACK_IMPORTED_MODULE_5__enum_layerType__","__WEBPACK_IMPORTED_MODULE_6__template_tocPanelItemTemplate_html__","__WEBPACK_IMPORTED_MODULE_6__template_tocPanelItemTemplate_html___default","n","defLayers","id","GoogleImage","name","src","getGoogleImage","TDImage","getTianImage","TDVector","getTianVector","topMost","command_toc","inhertObject","injects","ol","undefined","mapContainer","controlBarContainer","controlBar","getMapHelper","options","target","templates","itemLegendTemplate","layers","type","command","init","apply","this","arguments","mapHelper","_layerDef","resolveLayerList","layerDefList","exisitLayers","i","length","layerdef","filter","x","get","tmpMap","map","console","warn","push","active","async","panel","isPanelFirstLoad","html","layerDefine","isObj","layer","getLayer","addLayer","setZIndex","index","legend","legendItemHtml","j","legendDefine","format","itemHtml","a","stage","getVisible","show","legendHtml","find","empty","append","call","delegate","$this","attr","removeClass","setVisible","addClass","destroy"],"mappings":"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","file":"static/js/8.d6de8fad1488edf5e525.js","sourcesContent":["module.exports = \"<div class=\\\"item\\\" data-layer-stage=\\\"{stage}\\\" data-layer=\\\"{id}\\\">\\r\\n    <label class=\\\"{show} title\\\">\\r\\n    <span>{name}</span>\\r\\n    <i><em></em></i>\\r\\n    </label>\\r\\n    <ul class=\\\"features_text\\\">\\r\\n        {legendHtml}        \\r\\n    </ul>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/olMap/src/mapHelper/template/tocPanelItemTemplate.html\n// module id = rpOp\n// module chunks = 5 8","import comLib from '../common/comLib'\r\nimport layers from '../common/layers'\r\nimport baseControl from '../control/baseControl'\r\nimport controlType from '../enum/controlType'\r\nimport mapId from '../enum/mapId'\r\nimport layerType from '../enum/layerType'\r\n\r\n\r\nimport tocPanelItemTemplate from '../template/tocPanelItemTemplate.html';\r\n\r\n//toc 管理图层的开关, 右下角的那种请另外写\r\n\r\n//预定义的图层\r\nvar defLayers = [\r\n    {\r\n        id: mapId.GoogleImage,\r\n        name: \"谷歌影像\",\r\n        src: layers.getGoogleImage(null, false),\r\n    },\r\n    {\r\n        id: mapId.TDImage,\r\n        name: \"天地图影像\",\r\n        src: layers.getTianImage(null, false),\r\n    },\r\n    {\r\n        id: mapId.TDVector,\r\n        name: \"天地图矢量\",\r\n        src: layers.getTianVector(null, false),\r\n        topMost: true,\r\n    },\r\n]\r\n\r\n\r\nvar command_toc = comLib.inhertObject(baseControl);\r\n\r\ncommand_toc.injects = {\r\n    ol: undefined,\r\n    mapContainer: undefined,  // 地图所在div\r\n    controlBarContainer: undefined, //bar 所在的div\r\n    controlBar: undefined, // bar\r\n    getMapHelper: undefined\r\n}\r\n\r\n\r\ncommand_toc.options = {\r\n    target: \"tocPanel.html\",\r\n    templates: {\r\n        // itemTemplate: ' <div class=\"item\" data-layer-stage=\"{stage}\" data-layer=\"{id}\"> <label class=\"{show}\"></label>        <span>{name}</span>         <i><em></em></i>    </label><ul class=\"features_text\"></ul></div>',\r\n        itemLegendTemplate: '<li data-value=\"{value}\"><span style=\"background: {color}\"></span>{name}</li>',\r\n    },\r\n    layers: ['source']\r\n}\r\n\r\ncommand_toc.type = controlType.command;\r\n\r\n\r\ncommand_toc.init = function (injects, options) {\r\n    baseControl.init.apply(this, arguments);\r\n    var mapHelper = this.injects.getMapHelper();\r\n\r\n    var _layerDef = options && options.layers ? options.layers : this.options.layers;    \r\n    this.options.layers = resolveLayerList(_layerDef, mapHelper);    \r\n\r\n}\r\n\r\ncommand_toc.active = async function () {\r\n    var self = this;\r\n    self.panel = await baseControl.active.apply(this, arguments);\r\n    // var mapHelper = this.injects.getMapHelper();\r\n    // var ol = this.injects.ol;\r\n\r\n    if (self.options.isPanelFirstLoad) {\r\n        initTocDom.call(self);\r\n        bindEvents.call(self);\r\n    }\r\n    // var panel = await this.getTargetTemplatePanel().then()\r\n\r\n\r\n\r\n}\r\n\r\ncommand_toc.destroy = function () {\r\n\r\n}\r\n\r\n//格式化layer的list 翻译一些特殊的标识\r\nfunction resolveLayerList(layerDefList, mapHelper, exisitLayers) {\r\n\r\n    exisitLayers = exisitLayers || [];\r\n    for (let i = 0; i < layerDefList.length; i++) {\r\n        const layerdef = layerDefList[i];\r\n        if (layerdef == \"all\") { // all => 取全部的预定义\r\n            // exisitLayers = exisitLayers.concat(resolveLayerList(defLayers, mapHelper,exisitLayers))\r\n            resolveLayerList(defLayers, mapHelper,exisitLayers)\r\n        } else if (layerdef == \"source\") {// source => 取全部的map图层    \r\n            // exisitLayers = exisitLayers.concat(resolveLayerList(\r\n            //     mapHelper.layers\r\n            //         .filter(x => {\r\n            //             return x.get('type') != layerType.tmpMap //临时图层不要出现在toc里\r\n            //         })\r\n            //         .map(x => {\r\n            //             return {\r\n            //                 id: x.get('id'),\r\n            //                 name: x.get('title'),\r\n            //             }\r\n            //         }),mapHelper, exisitLayers))\r\n            resolveLayerList(\r\n                mapHelper.layers\r\n                    .filter(x => {\r\n                        return x.get('type') != layerType.tmpMap //临时图层不要出现在toc里\r\n                    })\r\n                    .map(x => {\r\n                        return {\r\n                            id: x.get('id'),\r\n                            name: x.get('title'),\r\n                        }\r\n                    }),mapHelper, exisitLayers);\r\n        } else {\r\n            //id要唯一            \r\n            if (exisitLayers.filter(x => x.id == layerdef.id).length > 0) {\r\n                console.warn(`toc说: id为 ${layerdef.id} 的值重复了`)\r\n                continue\r\n            }\r\n            exisitLayers.push(layerdef)\r\n        }\r\n\r\n    }\r\n\r\n    return exisitLayers;\r\n}\r\n\r\n//根据options.layrs 来生成dom\r\nfunction initTocDom() {\r\n    var self = this;\r\n    var mapHelper = this.injects.getMapHelper();\r\n\r\n\r\n    var html = \"\"\r\n        ;\r\n    for (let i = 0; i < self.options.layers.length; i++) {\r\n        const layerDefine = self.options.layers[i];\r\n        if (!comLib.isObj(layerDefine)) {\r\n            layerDefine = defLayers.filter(x => x.id == layerDefine)[0]\r\n        }\r\n\r\n        if (!layerDefine) {\r\n            throw \"layerDefine error\";\r\n        }\r\n\r\n        //根据id取到图层, 如果没有就新增进去\r\n\r\n        var layer = mapHelper.getLayer(layerDefine.id);\r\n        if (!layer) {\r\n            layer = mapHelper.addLayer(layerDefine.id, layerDefine.src);\r\n        }\r\n        if (layerDefine.topMost) {\r\n            layer.setZIndex(20);\r\n        } else if (layerDefine.index) {\r\n            layer.setZIndex(layerDefine.index);\r\n        }\r\n\r\n        if (layerDefine.legend) {\r\n            var legendItemHtml = \"\";\r\n            for (let j = 0; j < layerDefine.legend.length; j++) {\r\n                const legendDefine = layerDefine.legend[j];\r\n                legendItemHtml += self.options.templates.itemLegendTemplate.format(legendDefine);\r\n            }\r\n        }\r\n\r\n        var itemHtml = tocPanelItemTemplate.format({\r\n            id: layerDefine.id,\r\n            name: layerDefine.name || layer.get('title'),\r\n            stage: layer.getVisible() ? 1 : 0,\r\n            show: layer.getVisible() ? \"current\" : \"\",\r\n            legendHtml: legendItemHtml || \"\"\r\n        })\r\n\r\n        html += itemHtml;\r\n\r\n    }\r\n\r\n    self.panel.find('.features').empty().append(html);\r\n\r\n}\r\n\r\nfunction bindEvents() {\r\n    var self = this;\r\n    var mapHelper = this.injects.getMapHelper();\r\n\r\n    //切换显示\r\n    self.panel.delegate('.item', 'click', function () {\r\n        var $this = $(this);\r\n        var stage = $this.attr('data-layer-stage');\r\n        var id = $this.attr('data-layer');\r\n        //如果是已经显示的(1) 就关闭显示\r\n        if (stage == \"1\") {\r\n            $this.attr('data-layer-stage', \"0\");\r\n            $this.find('.title').removeClass('current');\r\n            mapHelper.setVisible(mapHelper.getLayer(id), false)\r\n        } else {\r\n            $this.attr('data-layer-stage', \"1\");\r\n            $this.find('.title').addClass('current');\r\n            mapHelper.setVisible(mapHelper.getLayer(id), true)\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nexport default command_toc;\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/olMap/src/mapHelper/control/command_toc.js\n// module id = znA6\n// module chunks = 8"],"sourceRoot":""}